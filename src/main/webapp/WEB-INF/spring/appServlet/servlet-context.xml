<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet 컨텍스트: 이 서블릿의 요청 처리 인프라를 정의합니다. -->
	
	<!-- Spring MVC @Controller 프로그래밍 모델을 활성화합니다. -->
	<annotation-driven />

	<!-- /resources/**에 대한 HTTP GET 요청을 처리하여 ${webappRoot}/resources 디렉토리에 있는 정적 리소스를 효율적으로 제공합니다. -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- @Controllers에 의해 선택된 뷰를 /WEB-INF/views 디렉토리에 있는 .jsp 리소스로 해석합니다. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 스프링 빈을 스캔하기 위한 컴포넌트 스캔 -->
	<!-- 지정된 패키지를 스캔하여 스프링 컴포넌트를 검색합니다. -->
	<context:component-scan base-package="com.thoreausawyer.*" />
	
	<!-- classpath:/ 는 resource폴더 아래를 가르킴 -->
	<beans:bean id="dataSource" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location" value="classpath:Hikari.properties"/>
	</beans:bean>
	
	<!-- MyBatis 설정 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <beans:property name="dataSource" ref="dataSource" />
	    <beans:property name="mapperLocations" value="classpath:/mapper/*.xml" />
	    <beans:property name="configLocation" value="classpath:/mybatis-config.xml" />
	</beans:bean>

	<!-- HikariCP 설정 -->
	
	<!-- classpath:/ 는 resource폴더 아래를 가르킴 -->
	<beans:bean id="dataSource" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location" value="classpath:Hikari.properties"/>
	</beans:bean>
	
	<!-- DB커넥션 객체가 들어 있습니다. -->
	<beans:bean id="jdbc" class="com.thoreausawyer.hikari.HikariDataSource" >
		<beans:constructor-arg ref="hikariConfig" />
	</beans:bean>
	
	<beans:bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	    <beans:property name="driverClassName" value="${jdbc.driverClassName}" />
	    <beans:property name="jdbcUrl" value="${jdbc.url}" />
	    <beans:property name="username" value="${jdbc.username}" />
	    <beans:property name="password" value="${jdbc.password}" />
	</beans:bean>

	<!-- 트랜잭션 관리 설정 -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

</beans:beans>
